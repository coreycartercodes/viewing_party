---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<DONT_SHARE_MY_KEY>&language=en&page=1&query=Hello
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 13 Oct 2020 22:04:06 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 ee9de9e6182ae0c8e8f119177e905245.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - EpS_fu1BCL9-eOs_o_U8jzUGNnJkRMAOc2ekPcWHaPL36FxmAlUBlQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 13 Oct 2020 22:04:06 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<DONT_SHARE_MY_KEY>&language=en&page=1&query=Hello
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 13 Oct 2020 22:04:06 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 ce4b35590464ed34415a13badd946ebb.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - oo3695MQGLKzqOaRTI_pjFxLOsACswryKNTUZBeDzV7r3Yh5d3h6vg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 13 Oct 2020 22:04:06 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<DONT_SHARE_MY_KEY>&language=en&page=1&query=Hello
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 13 Oct 2020 22:04:06 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 a44b9db7a2d103360945ab52619e5016.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - kT7ToyTs5y6K8TN7MIlWooLvPEuQWMJdaMK_-5jQkAHF7_FGh2g3EQ==
      Age:
      - '38'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 13 Oct 2020 22:04:44 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<DONT_SHARE_MY_KEY>&language=en&page=2&query=Hello
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 13 Oct 2020 22:04:06 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 ce4b35590464ed34415a13badd946ebb.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - Hgy33NnhahdLD4tENizra815FU2H3XPcloI9btjJAMVP7XAN7ehhDA==
      Age:
      - '38'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 13 Oct 2020 22:04:44 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<DONT_SHARE_MY_KEY>&language=en&page=1&query=Hello
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 13 Oct 2020 22:04:06 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 ec4d04f2befcd6652834fd368a8b671e.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - i6ocoJoDhCbKhHrprr_IC1gJcufpoQddBR-AvOeG46DTTl4pUHmi-Q==
      Age:
      - '38'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJ0b3RhbF9yZXN1bHRzIjo1NjYsInRvdGFsX3BhZ2VzIjoyOSwicmVzdWx0cyI6W3sicG9wdWxhcml0eSI6OC43OTEsInZvdGVfY291bnQiOjE2NSwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvYVBaT3Q5QlIzZ25rMVJ5WDkyNHlTcTgxUzRQLmpwZyIsImlkIjoxNDAzMCwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC96enI0YWZzQ2c5OUFwZVRLNWswbmlGaUNLVm8uanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiSGVsbG8sIERvbGx5ISIsImdlbnJlX2lkcyI6WzM1LDEwNDAyLDEwNzQ5LDEwNzUxXSwidGl0bGUiOiJIZWxsbywgRG9sbHkhIiwidm90ZV9hdmVyYWdlIjo3LCJvdmVydmlldyI6Ik1hdGNobWFrZXIsIERvbGx5IExldmkgdGFrZXMgYSB0cmlwIHRvIFlvbmtlcnMsIE5ldyBZb3JrIHRvIHNlZSB0aGUgXCJ3ZWxsLWtub3duIHVubWFycmllZCBoYWxmLWEtbWlsbGlvbmFpcmUsXCIgSG9yYWNlIFZhbmRlcmdlbGRlci4gV2hpbGUgdGhlcmUsIHNoZSBjb252aW5jZXMgaGltLCBoaXMgdHdvIHN0b2NrIGNsZXJrcyBhbmQgaGlzIG5pZWNlIGFuZCBoZXIgYmVhdSB0byBnbyB0byBOZXcgWW9yayBDaXR5LiIsInJlbGVhc2VfZGF0ZSI6IjE5NjktMTItMTIifSx7InBvcHVsYXJpdHkiOjguMDMzLCJpZCI6NDQ2Mjg5LCJ2aWRlbyI6ZmFsc2UsInZvdGVfY291bnQiOjIwLCJ2b3RlX2F2ZXJhZ2UiOjUuNCwidGl0bGUiOiJIZWxsbyBBZ2FpbiIsInJlbGVhc2VfZGF0ZSI6IjIwMTctMTEtMDgiLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJIZWxsbyBBZ2FpbiIsImdlbnJlX2lkcyI6WzE4LDEwNDAyLDEwNzQ5XSwiYmFja2Ryb3BfcGF0aCI6IlwvNHc3QkoxcjhvdmkxUEFvRnJwZklKWWhmYWNtLmpwZyIsImFkdWx0IjpmYWxzZSwib3ZlcnZpZXciOiJUZW4gbG9zdCBzb3VscyBzbGlwIGluIGFuZCBvdXQgb2Ygb25lIGFub3RoZXIncyBhcm1zIGluIGEgZGFpc3ktY2hhaW5lZCBtdXNpY2FsIGV4cGxvcmF0aW9uIG9mIGxvdmUncyBiaXR0ZXJzd2VldCBlbWJyYWNlLiBBIGZpbG0gYWRhcHRhdGlvbiBvZiBNaWNoYWVsIEpvaG4gTGFDaGl1c2EncyBjZWxlYnJhdGVkIG11c2ljYWwsIG9yaWdpbmFsbHkgYmFzZWQgb24gQXJ0aHVyIFNjaG5pdHpsZXIncyBwbGF5LCBMYSBSb25kZS4iLCJwb3N0ZXJfcGF0aCI6IlwvYkhIdDNISXI3TXBZaVJTdzFYTnhabTNCM2NuLmpwZyJ9LHsicG9wdWxhcml0eSI6OS4zODQsInZvdGVfY291bnQiOjAsInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL2FFRXZlQlJlQW5oaXUxU3J6WVpia3hMcUxrTi5qcGciLCJpZCI6NzQ0MTEwLCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkhlbGxvIHdvcmxkIiwiZ2VucmVfaWRzIjpbXSwidGl0bGUiOiJIZWxsbyB3b3JsZCIsInZvdGVfYXZlcmFnZSI6MCwib3ZlcnZpZXciOiJDdXJyZW50IGluc3RhYmlsaXR5IG9mIGNsaW1hdGUgc3lzdGVtIGltcGFjdHMgaWNlIGNvcmVzIGFuZCByaXNlcyBnbG9iYWwgc2VhIGxldmVsLCBhcyB3ZWxsIGFzIGNoYW5nZXMgaHVtYW4gbGlmZS4gQXQgdGhlIHNhbWUgdGltZSBvbmx5IGRhdGEgY29kZSBvZiBpbnRlbGxpZ2VudCBtYWNoaW5lcyByZW1haW5zIGNvbnN0YW50IGluIHRoZSBtb2Rlcm4gZ2VvZ3JhcGh5LiIsInJlbGVhc2VfZGF0ZSI6IjIwMjAtMTAtMTYifSx7InBvcHVsYXJpdHkiOjQuMjIyLCJpZCI6NTA3NTMxLCJ2aWRlbyI6ZmFsc2UsInZvdGVfY291bnQiOjEsInZvdGVfYXZlcmFnZSI6NS41LCJ0aXRsZSI6IkhlbGxvICYgR29vZGJ5ZSIsInJlbGVhc2VfZGF0ZSI6IjIwMTgtMDMtMDkiLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJIZWxsbyAmIEdvb2RieWUiLCJnZW5yZV9pZHMiOlsxMDc0OSwxOF0sImJhY2tkcm9wX3BhdGgiOm51bGwsImFkdWx0IjpmYWxzZSwib3ZlcnZpZXciOiJXaXRoIHdvdW5kcyBzdGlsbCBvcGVuIGZyb20gdGhlIHJlY2VudCBlbmQgb2YgdGhlaXIgNSB5ZWFyIHJlbGF0aW9uc2hpcCwgRHJldyBhbmQgQmV0aCBkZWNpZGUgdG8gbWVldCB1cCBmb3IgYSBxdWlldCBkaW5uZXIgYXQgRHJldydzIGFwYXJ0bWVudCB0byBoZWxwIHNvbGlkaWZ5IHRoZWlyIG5ld2x5IGZvdW5kIHN0YXRpb24gYXMgXCJqdXN0IGZyaWVuZHNcIi4iLCJwb3N0ZXJfcGF0aCI6IlwvbEdUaTBBazdRTENNQm5vT3hqMldvTk9NejB5LmpwZyJ9LHsicG9wdWxhcml0eSI6OS4zOTIsInZvdGVfY291bnQiOjMwLCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC8yWVIya0ZXM0g5VnNNRFVvMjZiem5mRExvMXIuanBnIiwiaWQiOjYyODAzOSwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC82TDRMSVNyZTY2NmJhUUE5a0ZwZlJUd0ROdUouanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiSGVsbG8sIFByaXZpbGVnZS4gSXQncyBNZSwgQ2hlbHNlYSIsImdlbnJlX2lkcyI6Wzk5XSwidGl0bGUiOiJIZWxsbywgUHJpdmlsZWdlLiBJdCdzIE1lLCBDaGVsc2VhIiwidm90ZV9hdmVyYWdlIjo0LjksIm92ZXJ2aWV3IjoiSW4gdGhpcyBkb2N1bWVudGFyeSwgQ2hlbHNlYSBIYW5kbGVyIGV4cGxvcmVzIGhvdyB3aGl0ZSBwcml2aWxlZ2UgaW1wYWN0cyBVUyBjdWx0dXJlIOKAkyBhbmQgdGhlIHdheXMgaXTigJlzIGJlbmVmaXRlZCBoZXIgb3duIGxpZmUgYW5kIGNhcmVlci4iLCJyZWxlYXNlX2RhdGUiOiIyMDE5LTA5LTEzIn0seyJwb3B1bGFyaXR5Ijo4LjQwNSwiaWQiOjMwMzYyMywidmlkZW8iOmZhbHNlLCJ2b3RlX2NvdW50Ijo5Miwidm90ZV9hdmVyYWdlIjo2LjUsInRpdGxlIjoiSGVsbG8gTGFkaWVzOiBUaGUgTW92aWUiLCJyZWxlYXNlX2RhdGUiOiIyMDE0LTExLTIyIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiSGVsbG8gTGFkaWVzOiBUaGUgTW92aWUiLCJnZW5yZV9pZHMiOlszNV0sImJhY2tkcm9wX3BhdGgiOm51bGwsImFkdWx0IjpmYWxzZSwib3ZlcnZpZXciOiJXaGVuIFN0dWFydCBsZWFybnMgdGhhdCBoaXMgQnJpdGlzaCBleC1naXJsZnJpZW5kIGlzIHBsYW5uaW5nIHRvIHZpc2l0IExvcyBBbmdlbGVzIHdpdGggaGVyIGh1c2JhbmQsIGhlIHNldHMgb3V0IHRvIGltcHJlc3MgdGhlbSB3aXRoIGhpcyBnbGFtb3JvdXMgbGlmZXN0eWxlLCBlbmxpc3RpbmcgYSBSdXNzaWFuIG1vZGVsIGhl4oCZcyBqdXN0IG1ldCB0byBwbGF5IHRoZSByb2xlIG9mIGhpcyBiZWF1dGlmdWwgZ2lybGZyaWVuZC4gV2hhdCBjb3VsZCBnbyB3cm9uZz8iLCJwb3N0ZXJfcGF0aCI6Ilwvczh2akhoS05uOGdSekVKR0dmTmYxSWhqZlNXLmpwZyJ9LHsicG9wdWxhcml0eSI6NS4wNDIsImlkIjozNTE1MSwidmlkZW8iOmZhbHNlLCJ2b3RlX2NvdW50IjozNywidm90ZV9hdmVyYWdlIjo1LjUsInRpdGxlIjoiSGVsbG8gQWdhaW4iLCJyZWxlYXNlX2RhdGUiOiIxOTg3LTExLTA2Iiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiSGVsbG8gQWdhaW4iLCJnZW5yZV9pZHMiOlsxNCwxOCwzNSw4NzgsMTA3NDldLCJiYWNrZHJvcF9wYXRoIjoiXC92MlFWUXMzbmRZczg5NDVkcUR6Z2xhdENCNlkuanBnIiwiYWR1bHQiOmZhbHNlLCJvdmVydmlldyI6Ikx1Y3kgQ2hhZG1hbiAoU2hlbGxleSBMb25nKSBjaG9rZXMgdG8gZGVhdGggYW5kIGlzIHJlc3VycmVjdGVkIGJ5IGhlciBsb29weSBzaXN0ZXIgWmVsZGEgKEp1ZGl0aCBJdmV5KSBvbiB0aGUgb25lIHllYXIgYW5uaXZlcnNhcnkgb2YgaGVyIGRlYXRoLiBMdWN5LCBvZiBjb3Vyc2UsIGRvZXMgbm90IGJlbGlldmUgc2hlIGhhcyBhY3R1YWxseSBiZWVuIGRlYWQgYW5kIHRoaW5rcyBpdCBpcyBhbiBlbGFib3JhdGUgaG9heCB1bnRpbCBzaGUgZ29lcyB0byBoZXIgYXBhcnRtZW50IGFuZCBkaXNjb3ZlcnMgaGVyIGh1c2JhbmQgKENvcmJpbiBCZXJuc2VuKSBtYXJyaWVkIHRvIGhlciBnb2xkIGRpZ2dpbmcgYmVzdCBmcmllbmQsIEtpbSAoU2VsYSBXYXJkKS4iLCJwb3N0ZXJfcGF0aCI6IlwvbWJOSjdRZTMzWHROMmFlbk8waWxkQ09wRzB5LmpwZyJ9LHsicG9wdWxhcml0eSI6Ni43OTUsInZvdGVfY291bnQiOjQ5LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9zSkZvdVVmQ2dIRlNVaDVPS1ZTUUJTZnJmQTEuanBnIiwiaWQiOjU5Mzk2MSwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC9wdGlqWEVTNnVNdUtmS29sVGJBZVYyTHZFVk4uanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJ0bCIsIm9yaWdpbmFsX3RpdGxlIjoiSGVsbG8sIExvdmUsIEdvb2RieWUiLCJnZW5yZV9pZHMiOlsxOCwxMDc0OV0sInRpdGxlIjoiSGVsbG8sIExvdmUsIEdvb2RieWUiLCJ2b3RlX2F2ZXJhZ2UiOjUuNCwib3ZlcnZpZXciOiJBIGxvdmUgc3Rvcnkgb2YgSm95IGFuZCBFdGhhbiwgRmlsaXBpbm8gd29ya2VycyBiYXNlZCBpbiBIb25nIEtvbmcuIEV0aGFuLCBhIGJhcnRlbmRlciwgaXMga2VlbiBvbiByb21hbnRpY2FsbHkgcHVyc3VpbmcgSm95LCBhIGRvbWVzdGljIGhlbHBlciB3aG8gaXMgd2hvbGx5IGRlZGljYXRlZCB0byBwcm92aWRpbmcgZm9yIGhlciBmYW1pbHkuIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0wNy0zMSJ9LHsicG9wdWxhcml0eSI6My4xMTksInZvdGVfY291bnQiOjksInZpZGVvIjpmYWxzZSwicG9zdGVyX3BhdGgiOiJcL2NuMHpvQ2VEb0t1MHNacVkxdWw5dzVQTHVCMS5qcGciLCJpZCI6MzE3NzAsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvMzROUE8zNzVXNHBnaGNtdjAwOUg5cFBFNFBtLmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkhlbGxvLCBGcmlzY28sIEhlbGxvIiwiZ2VucmVfaWRzIjpbMzUsMTA0MDIsMTA3NDldLCJ0aXRsZSI6IkhlbGxvLCBGcmlzY28sIEhlbGxvIiwidm90ZV9hdmVyYWdlIjo2LjQsIm92ZXJ2aWV3IjoiSW4gdHVybi1vZi10aGUtY2VudHVyeSBTYW4gRnJhbmNpc2NvLCBhbiBhbWJpdGlvdXMgdmF1ZGV2aWxsaWFuIHRha2VzIGhpcyBxdWFydGV0IGZyb20gYSBob25reSB0b25rIHRvIHRoZSBiaWcgdGltZSwgd2hpbGUgc3B1cm5pbmcgdGhlIGxvdmUgb2YgaGlzIHRyb3VwZSdzIHN0YXIgc2luZ2VyIGZvciBhIHNlbGZpc2ggaGVpcmVzcy4iLCJyZWxlYXNlX2RhdGUiOiIxOTQzLTAzLTI2In0seyJwb3B1bGFyaXR5IjozLjA0OCwidm90ZV9jb3VudCI6MiwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6bnVsbCwiaWQiOjI5ODg1MiwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJIZWxsbyBRdW8iLCJnZW5yZV9pZHMiOls5OSwxMDQwMl0sInRpdGxlIjoiSGVsbG8gUXVvIiwidm90ZV9hdmVyYWdlIjo2LjUsIm92ZXJ2aWV3IjoiQ29sbGVjdGluZyBob3VycyBvZiBwcmV2aW91c2x5IHVuc2VlbiBmb290YWdlIGFuZCBjbGFzc2ljIGxpdmUgbWF0ZXJpYWwgd2l0aCBmdWxsIGV4Y2x1c2l2ZSBhY2Nlc3MgdG8gYWxsIGJhbmQgbWVtYmVycyB0aGlzIGlzIHRoZSBkZWZpbml0aXZlIHN0b3J5IG9mIGEgYmFuZCB0aGF0IGhhcyBkb25lIGFuZCBzZWVuIGl0IGFsbC4gQXMgd2VsbCBhcyBmdWxsIGFjY2VzcyB0byB0aGUgYmFuZCwgSGVsbG8gUXVvISBBbHNvIGZlYXR1cmVzIGlucHV0IGZyb20gYSBob3N0IG9mIHRoZSBiaWdnZXN0IG5hbWVzIGluIHJvY2sgaW5jbHVkaW5nOiBCcmlhbiBNYXkgb2YgUXVlZW4sIEpvZSBFbGxpb3R0IG9mIERlZiBMZXBwYXJkLCBUaGluIExpenp5LCBCdXp6Y29ja3MsIFNsYWRlLCBQYXVsIFdlbGxlciwgU2lyIENsaWZmIFJpY2hhcmQgYW5kIE1pZGdlIFVyZS4gVGhlIGRvY3VtZW50YXJ5IGFsc28gZXhjbHVzaXZlbHkgZmVhdHVyZXMgdGhlIG1vbWVudCB3aGVuIHRoZSBvcmlnaW5hbCBsaW5lIHVwIG9mIHRoZSBiYW5kIG1ldCBhZ2FpbiBmb3IgdGhlIGZpcnN0IHRpbWUgaW4gb3ZlciAzMCB5ZWFycy4gQSB0cnVseSBwb2lnbmFudCByZXVuaW9uLCBhZnRlciB5ZWFycyBvZiBsZWdhbCB3cmFuZ2xpbmcsIHNhdyB0aGUgYmFuZCBjbGVhciB0aGUgYWlyIGJ1dCBhbHNvIHBsdWcgaW4gYW5kIHBsYXkgdG9nZXRoZXIgb25jZSBhZ2Fpbi4uLiBUaGlzIEFjY2VzcyBBbGwgQXJlYXMgQ29sbGVjdG9yIHMgRWRpdGlvbiBpbmNsdWRlcyAzIGhvdXJzIG9mIGFzdG9uaXNoaW5nIG5ldmVyIHNlZW4gYmVmb3JlIFF1byBmb290YWdlISIsInJlbGVhc2VfZGF0ZSI6IjIwMTItMTAtMjIifSx7InBvcHVsYXJpdHkiOjEwLjEwNCwidm90ZV9jb3VudCI6MzE4LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9lTWgwRm5DZmlUckw1U3U5ZERIc2w4NFR5dWkuanBnIiwiaWQiOjMyMDU4OCwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC96VWhYY3VhMGdDVEhqTjl0WU1RVEp5Zlg3UW0uanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiSGVsbG8sIE15IE5hbWUgSXMgRG9yaXMiLCJnZW5yZV9pZHMiOlszNSwxOCwxMDc0OV0sInRpdGxlIjoiSGVsbG8sIE15IE5hbWUgSXMgRG9yaXMiLCJ2b3RlX2F2ZXJhZ2UiOjYuMywib3ZlcnZpZXciOiJBIHNlbGYtaGVscCBzZW1pbmFyIGluc3BpcmVzIGEgc2l4dHktc29tZXRoaW5nIHdvbWFuIHRvIHJvbWFudGljYWxseSBwdXJzdWUgaGVyIHlvdW5nZXIgY28td29ya2VyLiIsInJlbGVhc2VfZGF0ZSI6IjIwMTUtMTEtMjcifSx7InBvcHVsYXJpdHkiOjguMzM5LCJ2b3RlX2NvdW50Ijo5NCwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvcDFMelRrVlVCOW5NUHVtUGFuMldjaHF0S0tFLmpwZyIsImlkIjo4NDI4MSwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJIZWxsbyBJIE11c3QgQmUgR29pbmciLCJnZW5yZV9pZHMiOlszNSwxOCwxMDc0OV0sInRpdGxlIjoiSGVsbG8gSSBNdXN0IEJlIEdvaW5nIiwidm90ZV9hdmVyYWdlIjo1LjksIm92ZXJ2aWV3IjoiRGl2b3JjZWQgYW5kIGRlbW9yYWxpc2VkLCBBbXkgTWluc2t54oCZcyBwcm9zcGVjdHMgbG9vayBibGVhayB3aGVuIHNoZSBpcyBjb25kZW1uZWQgdG8gbW92ZSBiYWNrIGluIHdpdGggaGVyIHBhcmVudHMgYXQgdGhlIGFnZSBvZiAzNS4gRXZlcnlvbmUgd2FudHMgdG8gaGVscCBidXQsIGFzIGhlciBwYXRpZW5jZSBsZXZlbCB3aXRoIGFkdmljZSBpcyBwbHVtbWV0aW5nLCBhIGJvbGQgdGVlbmFnZSBib3kgZW50ZXJzIGhlciBsaWZlLCBpZ25pdGluZyBoZXIgbGFzdCBiaXQgb2Ygc2VsZi1lc3RlZW0uIiwicmVsZWFzZV9kYXRlIjoiMjAxMi0wOS0wNyJ9LHsicG9wdWxhcml0eSI6My4xNCwidm90ZV9jb3VudCI6MSwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6bnVsbCwiaWQiOjE4NjQsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiSGVsbG8tR29vZGJ5ZSIsImdlbnJlX2lkcyI6WzM1XSwidGl0bGUiOiJIZWxsby1Hb29kYnllIiwidm90ZV9hdmVyYWdlIjoxMCwib3ZlcnZpZXciOiJBIGNhciBzYWxlc21hbiBqb3VybmV5cyB0byBGcmFuY2UgYW5kIGVuY291bnRlcnMgYW4gYXBwYXJlbnRseSBsb25lbHkgd29tYW4uIEhlIGltbWVkaWF0ZWx5IGJlZ2lucyB0byBzdWNjZXNzZnVsbHkgd29vIGhlciBvbmx5IHRvIGxlYXJuIHRoYXQgc2hlIGlzIGFjdHVhbGx5IGEgYmFyb24ncyB3aWZlLiBGb3J0dW5hdGVseSwgdGhlIGJhcm9uIGJlbGlldmVzIGluIG9wZW4gbWFycmlhZ2VzIGFuZCB3aW5kcyB1cCBoaXJpbmcgdGhlIEVuZ2xpc2htYW4gdG8gdGVhY2ggaGlzIHNvbiAoZnJvbSBhbiBlYXJsaWVyIG1hcnJpYWdlKSBldmVyeXRoaW5nIGFib3V0IGF1dG9tb2JpbGVzLiBNZWFud2hpbGUgdGhlIGNhciBzYWxlc21hbiBmaW5kcyBoaW1zZWxmIGZhbGxpbmcgc2VyaW91c2x5IGluIGxvdmUgd2l0aCB0aGUgd2lmZS4gVGhlIGJhcm9uIHJlYWxseSBkb2Vzbid0IG1pbmQgYXMgaGUgaGltc2VsZiBpcyBpbnZvbHZlZCB3aXRoIGFub3RoZXIuIiwicmVsZWFzZV9kYXRlIjoiMTk3MC0wNy0xMiJ9LHsicG9wdWxhcml0eSI6OS45NzcsInZvdGVfY291bnQiOjg0LCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC92aGs4T1NKczE0ZFppTThYdHF5YVJxbjFRQ0ouanBnIiwiaWQiOjM5OTI5LCJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiJcL2U4ekJreFh5cm5iMk1Ib0ltbmpYd1ZqaTRUby5qcGciLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJIZWxsbyBNYXJ5IExvdTogUHJvbSBOaWdodCBJSSIsImdlbnJlX2lkcyI6WzI3XSwidGl0bGUiOiJIZWxsbyBNYXJ5IExvdTogUHJvbSBOaWdodCBJSSIsInZvdGVfYXZlcmFnZSI6NS41LCJvdmVydmlldyI6IldoZW4gSGFtaWx0b24gSGlnaCdzIFByb20gUXVlZW4gb2YgMTk1NywgTWFyeSBMb3UgTWFsb25leSBpcyBraWxsZWQgYnkgaGVyIGppbHRlZCBib3lmcmllbmQsIHNoZSBjb21lcyBiYWNrIGZvciByZXZlbmdlIDMwIHllYXJzIGxhdGVyLiBCaWxsIE5vcmRoYW0gaXMgbm93IHRoZSBwcmluY2lwbGUgb2YgSGFtaWx0b24gSGlnaCBhbmQgaGlzIHNvbiBpcyBhYm91dCB0byBhdHRlbmQgdGhlIHByb20gd2l0aCBWaWNraSBDYXJwZW50ZXIuIEhvd2V2ZXIsIHNoZSBpcyBwb3NzZXNzZWQgYnkgTWFyeSBMb3UgTWFsb25leSBhZnRlciBvcGVuaW5nIGEgdHJ1bmsgaW4gdGhlIHNjaG9vbCdzIGJhc2VtZW50LiBOb3cgQmlsbCBtdXN0IGZhY2UgdGhlIGhvcnJvciBoZSBsZWZ0IGJlaGluZCBpbiAxOTU3LiIsInJlbGVhc2VfZGF0ZSI6IjE5ODctMTAtMTYifSx7InBvcHVsYXJpdHkiOjcuNTY1LCJ2b3RlX2NvdW50Ijo1MiwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvNVVESXdJZ1lIcWJNY0FzRzF4SUp5V2k2MmZVLmpwZyIsImlkIjo0NjA4MjIsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvdkZPelhxN0c5TFRmQ2ZRb1lMV2xqRWtkTzN3LmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6Ik9oLCBIZWxsbyBvbiBCcm9hZHdheSIsImdlbnJlX2lkcyI6WzM1XSwidGl0bGUiOiJPaCwgSGVsbG8gb24gQnJvYWR3YXkiLCJ2b3RlX2F2ZXJhZ2UiOjcsIm92ZXJ2aWV3IjoiVHdvIGRlbHVzaW9uYWwgZ2VyaWF0cmljcyByZXZlYWwgY3VyaW91cyBwYXN0cywgc2hhcmUgYSBsb3ZlIG9mIHR1bmEgYW5kIHdlbGNvbWUgYSBzdXJwcmlzZSBndWVzdCBpbiB0aGlzIGZpbG1pbmcgb2YgdGhlIHBvcHVsYXIgQnJvYWR3YXkgY29tZWR5IHNob3cuIiwicmVsZWFzZV9kYXRlIjoiMjAxNy0wNi0xMyJ9LHsicG9wdWxhcml0eSI6NC4xNjUsInZvdGVfY291bnQiOjIyLCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC9iMktMcWZxRE14ODFDQ1BVRk03dW9tVDNnNGUuanBnIiwiaWQiOjEzODk3NywiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJvcmlnaW5hbF9sYW5ndWFnZSI6InJ1Iiwib3JpZ2luYWxfdGl0bGUiOiJIZWxsbyBIZXJtYW4iLCJnZW5yZV9pZHMiOlsxOF0sInRpdGxlIjoiSGVsbG8gSGVybWFuIiwidm90ZV9hdmVyYWdlIjo2LjEsIm92ZXJ2aWV3IjoiU2V0IGluIHRoZSBub3Qgc28gZGlzdGFudCBmdXR1cmUsIGluIEFueSBUb3duIFVTQSwgc2l4dGVlbiB5ZWFyIG9sZCBIZXJtYW4gSG93YXJkcyBtYWtlcyBhIGZhdGVmdWwgZGVjaXNpb24uIEhlIGVudGVycyBoaXMgc3VidXJiYW4gc2Nob29sIGFuZCBraWxscyB0aGlydHkgbmluZSBzdHVkZW50cywgdHdvIHRlYWNoZXJzLCBhbmQgYSBwb2xpY2Ugb2ZmaWNlci4gSnVzdCBiZWZvcmUgaGlzIGFycmVzdCBoZSBlbWFpbHMgaGlzIGlkb2wsIGZhbW91cyBqb3VybmFsaXN0IExheCBNb3JhbGVzLCBzZW5kaW5nIGhpbSBjbGlwcyBvZiB0aGUgc2hvb3RpbmdzIGNhcHR1cmVkIHdpdGggSGVybWFuJ3Mgb3duIGRpZ2l0YWwgY2FtZXJhLiBJbiB0aGUgY2xpcHMgSGVybWFuIHRlbGxzIExheCwgXCJJIHdhbnQgdG8gdGVsbCBteSBzdG9yeSBvbiB5b3VyIHNob3dcIi4gTGF4LCBoYXVudGVkIGJ5IGhpcyBvd24gcGFzdCwgaXMgbm93IGZhY2UgdG8gZmFjZSB3aXRoIEhlcm1hbi4iLCJyZWxlYXNlX2RhdGUiOiIyMDEyLTA2LTA1In0seyJwb3B1bGFyaXR5IjozLjM5Miwidm90ZV9jb3VudCI6NSwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6Ilwvckp0SVNWcU1OMTBlSWtYM2pVYVB1b0RHN3dWLmpwZyIsImlkIjo0MTAyMDAsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvZmhFOTBtMW5CdEZjMEd1d1lwRXFFMDhaNFIxLmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkhlbGxvIERlc3Ryb3llciIsImdlbnJlX2lkcyI6WzE4XSwidGl0bGUiOiJIZWxsbyBEZXN0cm95ZXIiLCJ2b3RlX2F2ZXJhZ2UiOjUuNCwib3ZlcnZpZXciOiJBIHlvdW5nIGp1bmlvciBob2NrZXkgcGxheWVyJ3MgbGlmZSBpcyBzaGF0dGVyZWQgYnkgYW4gaW4tZ2FtZSBhY3Qgb2YgdmlvbGVuY2UuIEluIGFuIGluc3RhbnQgaGlzIGxpZmUgaXMgYWJydXB0bHkgdHVybmVkIHVwc2lkZSBkb3duOyB0b3JuIGZyb20gdGhlIGZyYXRlcm5pdHkgb2YgdGhlIHRlYW0gYW5kIHRoZSBjb2luY2lkaW5nIHBvc2l0aW9uIG9mIHByb21pbmVuY2UsIGhlIGlzIGNhc3QgYXMgYSBwYXJpYWggYW5kIG9zdHJhY2l6ZWQgZnJvbSB0aGUgY29tbXVuaXR5LiBBcyBoZSBzdHJ1Z2dsZXMgd2l0aCB0aGUgcmVwZXJjdXNzaW9ucyBvZiB0aGUgZXZlbnQsIGRlc3BlcmF0ZSB0byBmaW5kIGEgbWVhbnMgb2YgcmVjb25jaWxpYXRpb24gYW5kIGEgc2Vuc2Ugb2YgaWRlbnRpdHksIGhpcyBwZXJzb25hbCBqb3VybmV5IGVuZHMgdXAgaWxsdW1pbmF0aW5nIHRyb3VibGluZyBzeXN0ZW1pYyBpc3N1ZXMgYXJvdW5kIHZpb2xlbmNlLiIsInJlbGVhc2VfZGF0ZSI6IjIwMTYtMDktMTAifSx7InBvcHVsYXJpdHkiOjMuOTgsInZvdGVfY291bnQiOjIxLCJ2aWRlbyI6ZmFsc2UsInBvc3Rlcl9wYXRoIjoiXC8yeEpHMERZd1dGYzJ3TzVLR1o4enhtVHloS3IuanBnIiwiaWQiOjM2MTc0OSwiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiXC9zaEd1bTFwRGlnTzlJYmRIME0xZWJlUEI3VEIuanBnIiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiSGVsbG8sIEl0J3MgTWUiLCJnZW5yZV9pZHMiOlsxOCw5NjQ4LDEwNzQ5LDEwNzcwXSwidGl0bGUiOiJIZWxsbywgSXQncyBNZSIsInZvdGVfYXZlcmFnZSI6Ny4zLCJvdmVydmlldyI6IlR3byB5ZWFycyBhZnRlciBoZXIgaHVzYmFuZCBkaWVzIGluIGEgc3VkZGVuIGFjY2lkZW50LCBBbm5pZSBhbmQgaGVyIHR3byBjaGlsZHJlbiBhcmUgbGVmdCB0byBjb3BlIHdpdGggdGhlIGxvc3MuIEFubmllIGNhbid0IGltYWdpbmUgZmFsbGluZyBpbiBsb3ZlIGFnYWluLCB1bnRpbCBzaGUgbWVldHMgYSB3ZWFsdGh5IGJhY2hlbG9yIHdobyBpcyBkcmF3biB0byBoZXIgZnJlZSBzcGlyaXQuIEFmcmFpZCB0byBsb3ZlIGFnYWluLCBzaGUgbG9uZ3MgZm9yIGd1aWRhbmNlIHdoZW4gc2hlIHN0YXJ0cyB0byBkZXZlbG9wIGZlZWxpbmdzIGZvciB0aGlzIG5ldyBtYW4uIEhlciBwcmF5ZXJzIGFyZSBhbnN3ZXJlZCB3aGVuIHNoZSBzdGFydHMgcmVjZWl2aW5nIGNvbW11bmljYXRpb25zIGZyb20gaGVyIGxhdGUgaHVzYmFuZCB0aGF0IGVuY291cmFnZSBoZXIgdG8gZm9sbG93IGhlciBoZWFydC4iLCJyZWxlYXNlX2RhdGUiOiIyMDE1LTA5LTI3In0seyJwb3B1bGFyaXR5IjozLjIwNiwidm90ZV9jb3VudCI6NCwidmlkZW8iOmZhbHNlLCJwb3N0ZXJfcGF0aCI6IlwvOTJKR2dMQXF2MlZBTE9RVWlEaUJjcFZCZ1pILmpwZyIsImlkIjoyMjUyODEsImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6IlwvYzlxZmI4eU1aSVl1bW5TYUdsbjNEYmNsVmFELmpwZyIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkhlbGxvIENhcnRlciIsImdlbnJlX2lkcyI6WzM1LDE4XSwidGl0bGUiOiJIZWxsbyBDYXJ0ZXIiLCJ2b3RlX2F2ZXJhZ2UiOjUuMSwib3ZlcnZpZXciOiJEb3duLW9uLWhpcy1sdWNrIENhcnRlciBoYXMgcmVjZW50bHkgYmVjb21lIGhvbWVsZXNzLCBzaW5nbGUgYW5kIHVuZW1wbG95ZWQuIERlc3BlcmF0ZSB0byB3aW4gYmFjayBoaXMgZXgtZ2lybGZyaWVuZCwgaGUgZ29lcyBvZmYgb24gYW4gYWR2ZW50dXJlIHRocm91Z2hvdXQgTG9uZG9uIHRvIGZpbmQgaGVyLCBwaWNraW5nIHVwIHNvbWUgb2RkIGhlbHBlcnMgYWxvbmcgdGhlIHdheS4iLCJyZWxlYXNlX2RhdGUiOiIyMDEzLTEwLTExIn0seyJwb3B1bGFyaXR5Ijo2LjQ4LCJpZCI6MTM5MjAwLCJ2aWRlbyI6ZmFsc2UsInZvdGVfY291bnQiOjIzLCJ2b3RlX2F2ZXJhZ2UiOjYuMiwidGl0bGUiOiJIZWxsbyBTaXN0ZXIsIEdvb2RieWUgTGlmZSIsInJlbGVhc2VfZGF0ZSI6IjIwMDYtMDEtMDEiLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJIZWxsbyBTaXN0ZXIsIEdvb2RieWUgTGlmZSIsImdlbnJlX2lkcyI6WzE4LDEwNzcwXSwiYmFja2Ryb3BfcGF0aCI6IlwvdEtlZWdadDBOMGl2QjYya3BZclpsc2hrVXh5LmpwZyIsImFkdWx0IjpmYWxzZSwib3ZlcnZpZXciOiJBIGNvbGxlZ2Ugc3R1ZGVudCBtdXN0IHRha2UgY2FyZSBvZiBoZXIgNy15ZWFyLW9sZCBoYWxmIHNpc3RlciBhZnRlciB0aGUgZGVhdGggb2YgdGhlaXIgcGFyZW50cy4iLCJwb3N0ZXJfcGF0aCI6IlwvalZ2Y1lVelpVUVdjVzJaMDhFVk9qeGhDZmhrLmpwZyJ9XX0=
  recorded_at: Tue, 13 Oct 2020 22:04:44 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<DONT_SHARE_MY_KEY>&language=en&page=2&query=Hello
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 13 Oct 2020 22:04:06 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 ed8294655bb258e13bfb027c25483ddb.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - HiscklflNDHuQXclDReJL6lHzrcLXAu2Ro0llvq0O64n69S1bWyFMw==
      Age:
      - '38'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 13 Oct 2020 22:04:44 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<DONT_SHARE_MY_KEY>&language=en&page=1&query=Hello
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 13 Oct 2020 22:04:06 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 cddde15c11afac53ac9fe7978dcfecd7.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - DI3KzLbEP4lzXIEqyCpj_0h1NiVOvzhVMCxDL1WYVk_zQklN7pJu1A==
      Age:
      - '38'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 13 Oct 2020 22:04:44 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<DONT_SHARE_MY_KEY>&language=en&page=2&query=Hello
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 13 Oct 2020 22:04:06 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 0e018abb74f4918cb6e427c3e0a7ee33.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 6BhGs-eiqZ032XOTUx-aVEkPu_7okGUJArEMF6uQOR8AummCjWnAgg==
      Age:
      - '38'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 13 Oct 2020 22:04:44 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<DONT_SHARE_MY_KEY>&language=en&page=1&query=Hello
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 13 Oct 2020 22:04:06 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 9c7e5857d78c5dc89042979317de5843.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 6E1IvUDRp1QE1iWQOA9arUIgEhVfuxEle4v6yey3I7sqbH7nxoEl5A==
      Age:
      - '38'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 13 Oct 2020 22:04:44 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<DONT_SHARE_MY_KEY>&language=en&page=2&query=Hello
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 13 Oct 2020 22:04:06 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=120
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 824a5d9ed02451bcb68b15ae5991dce0.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 73yLjHFWWh6EkjwPjQ4lrnlQJ2Z1vFJF-DW8CR0SkTPHEvSaL3KegQ==
      Age:
      - '38'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 13 Oct 2020 22:04:44 GMT
recorded_with: VCR 6.0.0
